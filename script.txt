
se: To learn file test under shell
4.	# Version: 1.0
5.	# Owner  : info@tejoyasha.com
6.	# Input  : None
7.	# Output : Message on screen
8.	######################
9.	 
10.	# clear the screen
11.	clear
12.	 
13.	# Check if the file /etc/passwd is available or not
14.	 
15.	if [ -f "/etc/passw" ]; then
16.	  # execute this if condition is true
17.	   echo "The file /etc/passw exists"
18.	else
19.	  # execute this if condition is true
20.	   echo "The file /etc/passw does not exists"
21.	fi
22.	 
23.	# dummy echo
24.	 
25.	echo " "
26.	 
27.	# Check if we have read permission on /etc/shadow file or not
28.	 
29.	if [ -r "/etc/shadow" ]; then
30.	  # execute this if condition is true
31.	  echo "Yes, you have the read permission on /etc/shadow file"
32.	else
33.	  # execute this if condition is false
34.	  echo "No, you do not have read permission on /etc/shadow file"
35.	fi
36.	 
37.	 
1.	2) #!/bin/bash
2.	######################
3.	# Purpose: To learn logical test
4.	# Version: 1.0
5.	# Owner  : info@tejoyasha.com
6.	# Input  : None
7.	# Output : Message on screen
8.	######################
9.	 
10.	 
11.	MARKS=$1
12.	 
13.	if [ ! $MARKS ]; then
14.	  echo "Usage: $0 <marks>"
15.	  exit
16.	fi
17.	 
18.	if [ $MARKS -gt 100 -o $MARKS -lt 1 ]; then
19.	  echo "Please enter marks between 1 and 100"
20.	  exit
21.	fi
22.	 
23.	 
24.	if [ $MARKS -ge 65 -a $MARKS -le 100 ]; then
25.	  echo "Student Result: First Class"
26.	elif [ $MARKS -ge 55 -a $MARKS -le 64 ]; then
27.	  echo "Student Result: Second Class"
28.	elif [ $MARKS -ge 45 -a $MARKS -le 54 ]; then
29.	  echo "Student Result: Third Class"
30.	else
31.	  echo "Student Result: Failed !!!!"
32.	fi
33.	 
34.	  
1.	3 )  #!/bin/bash
2.	######################
3.	# Purpose: To learn shell script
4.	# Version: 1.0
5.	# Owner  : info@tejoyasha.com
6.	# Input  : None
7.	# Output : Message on screen
8.	######################
9.	 
10.	# Clear the screen
11.	clear
12.	 
13.	# Print welcome message
14.	echo "!!! Welcome to BASH Shell scripting !!!"
15.	 
16.	sleep 10 # wait for 10 sec.
17.	 
18.	# Print end of script message
19.	echo "--END--"
1.	4)  #!/bin/bash
2.	######################
3.	# Purpose: To learn number test
4.	# Version: 1.0
5.	# Owner  : info@tejoyasha.com
6.	# Input  : None
7.	# Output : Message on screen
8.	######################
9.	 
10.	 
11.	MARKS=$1
12.	 
13.	 
14.	if [ $MARKS -ge 65 ]; then
15.	  echo "Student Result: First Class"
16.	elif [ $MARKS -ge 55 ]; then
17.	  echo "Student Result: Second Class"
18.	elif [ $MARKS -ge 45 ]; then
19.	  echo "Student Result: Third Class"
20.	else
21.	  echo "Student Result: Failed !!!!"
22.	fi
23.	 
24.	  

1.	5)  #!/bin/bash
2.	######################
3.	# Purpose: To learn string test
4.	# Version: 1.0
5.	# Owner  : info@tejoyasha.com
6.	# Input  : None
7.	# Output : Message on screen
8.	######################
9.	 
10.	# Check if you are the root user or not
11.	 
12.	WHOAMI=`/usr/bin/whoami`
13.	 
14.	if [ $WHOAMI == "root" ]; then
15.	  echo "You are the root user"
16.	else
17.	  echo "You are $WHOAMI user"
18.	fi
1.	6) #!/bin/bash
2.	######################
3.	# Purpose: To learn shell script
4.	# Version: 1.0
5.	# Owner  : info@tejoyasha.com
6.	# Input  : None
7.	# Output : Message on screen
8.	######################
9.	 
1.	7) #!/bin/bash
2.	######################
3.	# Purpose: To learn variables in shell scripting
4.	# Version: 1.0
5.	# Owner  : info@tejoyasha.com
6.	# Input  : None
7.	# Output : Message on screen
8.	######################
9.	 
10.	 
11.	COMMAND=/bin/ls
12.	 
13.	 
14.	# Expedted Output: The value of $COMMAND is /bin/ls
15.	 
16.	echo "The value of $COMMAND is $COMMAND"
17.	 
18.	 
19.	 

#!/bin/bash
######################
# Purpose: To learn shell script
# Version: 1.0
# Owner  : info@tejoyasha.com
# Input  : None
# Output : Message on screen
######################
 
# Get user name and set default password
MYUSER=$1
MYPASS="redhat"
 
# Check the user name is given or not
if [ ! $MYUSER ]; then
  echo "Usage: $0 <username>"
  exit
fi
 
# Check if I am a super user or not
 
WHOAMI=`/usr/bin/whoami`
 
if [ $WHOAMI != "root" ]; then
  echo "You MUST be a root user"
  exit
fi
 
# Check the user is already exists or not
 
/usr/bin/id $MYUSER
 
if [ $? -eq 0 ]; then
  echo "The user $MYUSER already exists"
  exit
fi
 
 
# Create the user
 
/usr/sbin/useradd  $MYUSER
 
if [ $? -ne 0 ]; then
  echo " We have some trouble to add user $MYUSER"
  exit
fi
 
# Set user default password
 
echo "$MYPASS" | /usr/bin/passwd --stdin "$MYUSER"
 
if [ $? -ne 0 ]; then
  echo " We have some trouble to set $MYUSER password"
  exit
fi
 
# Giving admin privileges
 
/usr/sbin/usermod -a -G wheel $MYUSER
 
if [ $? -ne 0 ]; then
  echo " We have some trouble to add $MYUSER to sudo group"
  exit
fi
 
 
 
echo "Successfully create user $MYUSER !!!!"
